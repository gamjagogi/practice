//자바실시간 강의(intellij사용)
//오라클jdk설치할때 자바가 설치된다
// 나중에 개인실습으로는 오라클jdk라는걸 사용한다.
//자바공부다음에 spring 웹 어플리케이션할거다.
//앱 개발할때, 자바로 개발하기도함, 요즘은 코틀린을 많이씀
//java se: 자바 스탠다트 에디션 ,자바 jdk설치시 다같이설치됨
//java ee: 주로 웹 및 엔터프라이즈 어플리케이션개발에사용, se위에 구축
//java me: 모바일
//java fx: 자바스크립트관련인거같다..
//자바관련 ide설치시 설치되는 플랫폼은 3개다. jre = 자바 런타임 엔비로멘트, jvm = 자바비쥬얼머신 jdk = 자바 데빌롭멘트 키트

//자바의 특징
//oop의 개념 : 다형성, 추상화, 캡슐화,오브젝트,class
//네트워크 분산처리를 지원 : 네트워크를 통해 객체 전송가능, RMI,EJB분산(객체전송) 애플리케이션 개발 지원.
//동적 클래스 로딩을 지원
//멀티스레드:프로세스가 여러개있는거 같은거다.(쉽게말해 뇌과 여러개있는거같은느낌)
//모든 OS에서 지원 : os를 바꾸어도, 각 os마다 별도의 실행환경을 제공(jre제공). 어느os든 jdm만 설치하면, 자바소스를 실행시킬수 있다.(.class파일 실행)
//인터프리티(컴파일을통해 바이너리코드로 번역) 기반, jvm을 거쳐서, 컴파일되서 초창기에는 느렸지만, 지금은 괜찮다. 하드웨어 성능이 워낙 업!해서
//풍부한 api지원, 고성능
//자동 메모리 관리 (gc = garbage collection) 메모리로 반환하는 메모리 관리를 해주기 때문에 별도의 코드가 필요없다
//자바는 동적할당 new후 c처럼 free()시켜줄필요없나?
//애플리케이션 : os의 jvm을 통해실행
//애플릿 : 블라우저 built-in jvm을 통해 실행
//java api document를 통해 package,class, 상속도,메서드 등 확인할수 있다.
//

public class Student {

}
